{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oussama\\\\OneDrive\\\\Bureau\\\\quiz-app\\\\src\\\\components\\\\Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport he from \"he\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\nexport default function Quiz(props) {\n  _s();\n  const {\n    results\n  } = props.questions;\n  const [rightAnwsers, setAnswer] = useState([]);\n  const [currentAnswer, setCA] = useState({\n    question: \"\",\n    answer: \"\"\n  });\n  const [decodedResults, setDecodedResults] = useState([]);\n  const [shuffledOptions, setShuffledOptions] = useState([]);\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    const decodedData = results.map(question => {\n      const decodedQuestion = {\n        ...question,\n        question: he.decode(question.question),\n        correct_answer: he.decode(question.correct_answer),\n        incorrect_answers: question.incorrect_answers.map(answer => he.decode(answer))\n      };\n      setAnswer(prev => {\n        return [...prev, {\n          question: decodedQuestion.question,\n          answer: decodedQuestion.correct_answer\n        }];\n      });\n      return decodedQuestion;\n    });\n    setDecodedResults(decodedData);\n    const allOptions = decodedData.map(q => shuffleArray([q.correct_answer, ...q.incorrect_answers]));\n    setShuffledOptions(allOptions);\n  }, [results]);\n  const handleChoice = (qst, ans) => {\n    console.log({\n      question: qst,\n      answer: ans\n    });\n    setCA({\n      question: qst,\n      answer: ans\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    for (let i = 0; i < rightAnwsers.length; i++) {\n      if (i.question == currentAnswer.question) {}\n    }\n    console.log(currentAnswer);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-item\",\n    children: decodedResults.map((q, index) => {\n      const {\n        correct_answer,\n        incorrect_answers,\n        question\n      } = q;\n      const options = shuffledOptions[index];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"quiz-form\",\n          children: [options.map(option => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: option,\n                value: option,\n                name: index,\n                type: \"radio\",\n                className: \"quiz-form-item\",\n                checked: currentAnswer.question === question && currentAnswer.answer === option,\n                onChange: () => handleChoice(question, option)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: option,\n                onClick: () => {\n                  setCA({\n                    question: question,\n                    answer: option\n                  });\n                },\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this)]\n            }, option, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 31\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            type: \"submit\",\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(Quiz, \"MWudp28VU5cP3P1/WyPuxURKUf8=\");\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","he","jsxDEV","_jsxDEV","shuffleArray","array","i","length","j","Math","floor","random","Quiz","props","_s","results","questions","rightAnwsers","setAnswer","currentAnswer","setCA","question","answer","decodedResults","setDecodedResults","shuffledOptions","setShuffledOptions","score","setScore","decodedData","map","decodedQuestion","decode","correct_answer","incorrect_answers","prev","allOptions","q","handleChoice","qst","ans","console","log","handleSubmit","e","preventDefault","className","children","index","options","fileName","_jsxFileName","lineNumber","columnNumber","option","id","value","name","type","checked","onChange","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Oussama/OneDrive/Bureau/quiz-app/src/components/Quiz.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport he from \"he\" ;\r\n\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n}\r\n\r\nexport default function Quiz(props) {\r\n    const {results} = props.questions\r\n    const [rightAnwsers, setAnswer] = useState([]);\r\n    const [currentAnswer, setCA] = useState({ question : \"\" , answer : \"\"})\r\n    const [decodedResults, setDecodedResults] = useState([]);\r\n     const [shuffledOptions, setShuffledOptions] = useState([])\r\n    const [score, setScore] = useState(0)\r\n\r\n    useEffect(() => {\r\n      const decodedData = results.map((question) => {\r\n        const decodedQuestion = {\r\n          ...question,\r\n          question: he.decode(question.question),\r\n          correct_answer: he.decode(question.correct_answer),\r\n          incorrect_answers: question.incorrect_answers.map((answer) =>\r\n            he.decode(answer)\r\n          ),\r\n        };\r\n        setAnswer(prev => {\r\n          return [\r\n            ...prev,\r\n            {\r\n              question: decodedQuestion.question,\r\n              answer: decodedQuestion.correct_answer,\r\n            },\r\n          ];\r\n        });\r\n        return decodedQuestion;\r\n      });\r\n\r\n      setDecodedResults(decodedData);\r\n      const allOptions = decodedData.map((q) =>\r\n        shuffleArray([q.correct_answer, ...q.incorrect_answers])\r\n      );\r\n      setShuffledOptions(allOptions);\r\n    }, [results]);\r\n    const handleChoice = (qst, ans) => {\r\n      console.log({\r\n        question: qst,\r\n        answer: ans,\r\n      });\r\n      setCA({\r\n        question: qst,\r\n        answer: ans,\r\n      });\r\n    };\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      for (let i = 0 ; i < rightAnwsers.length; i++){\r\n        if( i.question == currentAnswer.question) {\r\n          \r\n        }\r\n      }\r\n      console.log(currentAnswer);\r\n    };\r\n\r\n    return (\r\n        <div className='quiz-item'>\r\n            {decodedResults.map((q ,index) => {\r\n                const { correct_answer, incorrect_answers, question } = q;\r\n                const options = shuffledOptions[index]\r\n\r\n                return (\r\n                  <div key={index}>\r\n                    <h2>{question}</h2>\r\n                    <form className='quiz-form'>\r\n                        {options.map(option => {\r\n                            return (\r\n                              <div key={option}>\r\n                                <input\r\n                                  id={option}\r\n                                  value={option}\r\n                                  name={index}\r\n                                  type=\"radio\"\r\n                                  className=\"quiz-form-item\"\r\n                                  checked={currentAnswer.question === question && currentAnswer.answer === option}\r\n                                  onChange={() => handleChoice(question,option)}\r\n                                />\r\n                                <label\r\n                                  htmlFor={option}\r\n                                  onClick={() => {\r\n                                    setCA({\r\n                                      question: question,\r\n                                      answer: option,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {option}\r\n                                </label>\r\n                              </div>\r\n                            );\r\n                        })}\r\n                        <button\r\n                         onClick={handleSubmit} \r\n                          type='submit' \r\n                          >\r\n                            Confirm\r\n                          </button>\r\n                    </form>\r\n                  </div>\r\n                );\r\n            })}        \r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}