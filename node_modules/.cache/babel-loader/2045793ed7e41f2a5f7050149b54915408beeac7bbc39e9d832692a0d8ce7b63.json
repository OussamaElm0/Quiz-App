{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oussama\\\\OneDrive\\\\Bureau\\\\quiz-app\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Form from \"./Form\";\nimport Quiz from \"./Quiz\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [qst, setQst] = useState({\n    response_code: 0,\n    results: []\n  });\n  const [isFetching, setIsFetching] = useState(false);\n  useEffect(() => {\n    // Make an initial API call when the App component mounts\n    getQuestions(\"https://opentdb.com/api.php?amount=1&category=9&difficulty=easy&type=multiple\");\n  }, []);\n  const getQuestions = async apiUrl => {\n    if (!isFetching) {\n      try {\n        setIsFetching(true);\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        setQst(data);\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      } finally {\n        setIsFetching(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: getQuestions,\n      isFetching: isFetching\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Quiz, {\n      questions: qst,\n      score: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"5q2Ot/G8kx65l66G2ebtSvWqV/A=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Form","Quiz","Footer","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","qst","setQst","response_code","results","isFetching","setIsFetching","getQuestions","apiUrl","response","fetch","data","json","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","questions","score","_c","$RefreshReg$"],"sources":["C:/Users/Oussama/OneDrive/Bureau/quiz-app/src/components/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Form from \"./Form\";\r\nimport Quiz from \"./Quiz\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\n\r\nexport default function App() {\r\n  const [qst, setQst] = useState({ response_code: 0, results: [] });\r\n  const [isFetching, setIsFetching] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Make an initial API call when the App component mounts\r\n    getQuestions(\r\n      \"https://opentdb.com/api.php?amount=1&category=9&difficulty=easy&type=multiple\"\r\n    );\r\n  }, []);\r\n\r\n  const getQuestions = async (apiUrl) => {\r\n    if (!isFetching) {\r\n      try {\r\n        setIsFetching(true);\r\n        const response = await fetch(apiUrl);\r\n        const data = await response.json();\r\n        setQst(data);\r\n      } catch (error) {\r\n        console.log(\"Error fetching data:\", error);\r\n      } finally {\r\n        setIsFetching(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Form onSubmit={getQuestions} isFetching={isFetching} />\r\n      <Quiz questions={qst} score={0} />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAAC;IAAEc,aAAa,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EACjE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACAiB,YAAY,CACV,+EACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,MAAOC,MAAM,IAAK;IACrC,IAAI,CAACH,UAAU,EAAE;MACf,IAAI;QACFC,aAAa,CAAC,IAAI,CAAC;QACnB,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAM,CAAC;QACpC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCV,MAAM,CAACS,IAAI,CAAC;MACd,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAAC;MAC5C,CAAC,SAAS;QACRP,aAAa,CAAC,KAAK,CAAC;MACtB;IACF;EACF,CAAC;EAED,oBACEV,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA,CAACF,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVxB,OAAA,CAACL,IAAI;MAAC8B,QAAQ,EAAEd,YAAa;MAACF,UAAU,EAAEA;IAAW;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxDxB,OAAA,CAACJ,IAAI;MAAC8B,SAAS,EAAErB,GAAI;MAACsB,KAAK,EAAE;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClCxB,OAAA,CAACH,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACV,CAAC;AAEP;AAACpB,EAAA,CAlCuBD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}