{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oussama\\\\OneDrive\\\\Bureau\\\\quiz-app\\\\src\\\\components\\\\Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport he from \"he\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\nexport default function Quiz(props) {\n  _s();\n  const {\n    results\n  } = props.questions;\n  const [rightAnwsers, setAnswer] = useState([]);\n  const [currentAnswer, setCA] = useState({\n    question: \"\",\n    answer: \"\"\n  });\n  const [decodedResults, setDecodedResults] = useState([{}]);\n  const [shuffledOptions, setShuffledOptions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    const decodedData = results.map(question => {\n      const decodedQuestion = {\n        ...question,\n        question: he.decode(question.question),\n        correct_answer: he.decode(question.correct_answer),\n        incorrect_answers: question.incorrect_answers.map(answer => he.decode(answer))\n      };\n      setAnswer(prev => {\n        return [...prev, {\n          question: decodedQuestion.question,\n          answer: decodedQuestion.correct_answer\n        }];\n      });\n      return decodedQuestion;\n    });\n    setDecodedResults(decodedData);\n    const allOptions = decodedData.map(q => shuffleArray([q.correct_answer, ...q.incorrect_answers]));\n    setShuffledOptions(allOptions);\n  }, [results]);\n  const handleChoice = (qst, ans) => {\n    console.log({\n      question: qst,\n      answer: ans\n    });\n    setCA({\n      question: qst,\n      answer: ans\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    decodedResults.forEach(q => {\n      const {\n        question,\n        correct_answer\n      } = q;\n      if (currentAnswer.question === question) {\n        if (currentAnswer.answer === correct_answer) {\n          setScore(prevScore => prevScore + 1);\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score :\", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: decodedResults[0].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(Quiz, \"c/tagTulTs/BMMLdNKj7Gml0QeE=\");\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","he","jsxDEV","_jsxDEV","shuffleArray","array","i","length","j","Math","floor","random","Quiz","props","_s","results","questions","rightAnwsers","setAnswer","currentAnswer","setCA","question","answer","decodedResults","setDecodedResults","shuffledOptions","setShuffledOptions","score","setScore","index","setIndex","decodedData","map","decodedQuestion","decode","correct_answer","incorrect_answers","prev","allOptions","q","handleChoice","qst","ans","console","log","handleSubmit","e","preventDefault","forEach","prevScore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Oussama/OneDrive/Bureau/quiz-app/src/components/Quiz.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport he from \"he\" ;\r\n\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n}\r\n\r\nexport default function Quiz(props) {\r\n    const {results} = props.questions\r\n    const [rightAnwsers, setAnswer] = useState([]);\r\n    const [currentAnswer, setCA] = useState({ question : \"\" , answer : \"\"})\r\n    const [decodedResults, setDecodedResults] = useState([{}]);\r\n    const [shuffledOptions, setShuffledOptions] = useState([])\r\n    const [score, setScore] = useState(0)\r\n    const [index, setIndex] = useState(0)\r\n\r\n\r\n    useEffect(() => {\r\n      const decodedData = results.map((question) => {\r\n        const decodedQuestion = {\r\n          ...question,\r\n          question: he.decode(question.question),\r\n          correct_answer: he.decode(question.correct_answer),\r\n          incorrect_answers: question.incorrect_answers.map((answer) =>\r\n            he.decode(answer)\r\n          ),\r\n        };\r\n        setAnswer(prev => {\r\n          return [\r\n            ...prev,\r\n            {\r\n              question: decodedQuestion.question,\r\n              answer: decodedQuestion.correct_answer,\r\n            },\r\n          ];\r\n        });\r\n        return decodedQuestion;\r\n      });\r\n\r\n      setDecodedResults(decodedData);\r\n      const allOptions = decodedData.map((q) =>\r\n        shuffleArray([q.correct_answer, ...q.incorrect_answers])\r\n      );\r\n      setShuffledOptions(allOptions);\r\n    }, [results]);\r\n    const handleChoice = (qst, ans) => {\r\n      console.log({\r\n        question: qst,\r\n        answer: ans,\r\n      });\r\n      setCA({\r\n        question: qst,\r\n        answer: ans,\r\n      });\r\n    };\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      decodedResults.forEach((q) => {\r\n        const { question, correct_answer } = q;\r\n        if (currentAnswer.question === question) {\r\n          if (currentAnswer.answer === correct_answer) {\r\n            setScore((prevScore) => prevScore + 1); \r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    return (\r\n        <div className='quiz-item'>\r\n          <p>Score :{score}</p>\r\n          <div>\r\n            <h2>{decodedResults[0].question}</h2>\r\n            \r\n          </div>\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,EAAE,MAAM,IAAI;AAAE,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,YAAYA,CAACC,KAAK,EAAE;EAC3B,KAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACzC,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAACD,KAAK,CAACC,CAAC,CAAC,EAAED,KAAK,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,KAAK,CAACG,CAAC,CAAC,EAAEH,KAAK,CAACC,CAAC,CAAC,CAAC;EAC7C;EACA,OAAOD,KAAK;AACd;AAEA,eAAe,SAASO,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAChC,MAAM;IAACC;EAAO,CAAC,GAAGF,KAAK,CAACG,SAAS;EACjC,MAAM,CAACC,YAAY,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoB,aAAa,EAAEC,KAAK,CAAC,GAAGrB,QAAQ,CAAC;IAAEsB,QAAQ,EAAG,EAAE;IAAGC,MAAM,EAAG;EAAE,CAAC,CAAC;EACvE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAAC0B,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC4B,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAAC8B,KAAK,EAAEC,QAAQ,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EAGrCC,SAAS,CAAC,MAAM;IACd,MAAM+B,WAAW,GAAGhB,OAAO,CAACiB,GAAG,CAAEX,QAAQ,IAAK;MAC5C,MAAMY,eAAe,GAAG;QACtB,GAAGZ,QAAQ;QACXA,QAAQ,EAAEpB,EAAE,CAACiC,MAAM,CAACb,QAAQ,CAACA,QAAQ,CAAC;QACtCc,cAAc,EAAElC,EAAE,CAACiC,MAAM,CAACb,QAAQ,CAACc,cAAc,CAAC;QAClDC,iBAAiB,EAAEf,QAAQ,CAACe,iBAAiB,CAACJ,GAAG,CAAEV,MAAM,IACvDrB,EAAE,CAACiC,MAAM,CAACZ,MAAM,CAClB;MACF,CAAC;MACDJ,SAAS,CAACmB,IAAI,IAAI;QAChB,OAAO,CACL,GAAGA,IAAI,EACP;UACEhB,QAAQ,EAAEY,eAAe,CAACZ,QAAQ;UAClCC,MAAM,EAAEW,eAAe,CAACE;QAC1B,CAAC,CACF;MACH,CAAC,CAAC;MACF,OAAOF,eAAe;IACxB,CAAC,CAAC;IAEFT,iBAAiB,CAACO,WAAW,CAAC;IAC9B,MAAMO,UAAU,GAAGP,WAAW,CAACC,GAAG,CAAEO,CAAC,IACnCnC,YAAY,CAAC,CAACmC,CAAC,CAACJ,cAAc,EAAE,GAAGI,CAAC,CAACH,iBAAiB,CAAC,CACzD,CAAC;IACDV,kBAAkB,CAACY,UAAU,CAAC;EAChC,CAAC,EAAE,CAACvB,OAAO,CAAC,CAAC;EACb,MAAMyB,YAAY,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;IACjCC,OAAO,CAACC,GAAG,CAAC;MACVvB,QAAQ,EAAEoB,GAAG;MACbnB,MAAM,EAAEoB;IACV,CAAC,CAAC;IACFtB,KAAK,CAAC;MACJC,QAAQ,EAAEoB,GAAG;MACbnB,MAAM,EAAEoB;IACV,CAAC,CAAC;EACJ,CAAC;EACD,MAAMG,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBxB,cAAc,CAACyB,OAAO,CAAET,CAAC,IAAK;MAC5B,MAAM;QAAElB,QAAQ;QAAEc;MAAe,CAAC,GAAGI,CAAC;MACtC,IAAIpB,aAAa,CAACE,QAAQ,KAAKA,QAAQ,EAAE;QACvC,IAAIF,aAAa,CAACG,MAAM,KAAKa,cAAc,EAAE;UAC3CP,QAAQ,CAAEqB,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;QACxC;MACF;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACI9C,OAAA;IAAK+C,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBhD,OAAA;MAAAgD,QAAA,GAAG,SAAO,EAACxB,KAAK;IAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBpD,OAAA;MAAAgD,QAAA,eACEhD,OAAA;QAAAgD,QAAA,EAAK5B,cAAc,CAAC,CAAC,CAAC,CAACF;MAAQ;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd;AAACzC,EAAA,CArEuBF,IAAI;AAAA4C,EAAA,GAAJ5C,IAAI;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}