{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oussama\\\\OneDrive\\\\Bureau\\\\quiz-app\\\\src\\\\components\\\\Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport he from \"he\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\nexport default function Quiz(props) {\n  _s();\n  const {\n    results\n  } = props.questions;\n  const [rightAnser, setAnswer] = useState([{}]);\n  const [decodedResults, setDecodedResults] = useState([]);\n  useEffect(() => {\n    const decodedData = results.map(question => {\n      const decodedQuestion = {\n        ...question,\n        question: he.decode(question.question),\n        correct_answer: he.decode(question.correct_answer),\n        incorrect_answers: question.incorrect_answers.map(answer => he.decode(answer))\n      };\n      setAnswer({});\n      return decodedQuestion;\n    });\n    setDecodedResults(decodedData);\n  }, [results]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-item\",\n    children: decodedResults.map(q => {\n      const {\n        correct_answer,\n        incorrect_answers,\n        question\n      } = q;\n      const options = shuffleArray([correct_answer, ...incorrect_answers]);\n      console.log([correct_answer, ...incorrect_answers]);\n      console.log(options);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"quiz-form\",\n          children: [options.map(option => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: option,\n                value: option,\n                type: \"radio\",\n                name: \"answer\",\n                className: \"quiz-form-item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: option,\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this)]\n            }, option, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: checkAnswer,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, question, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Quiz, \"2DTEol61j/tG1uc4mjDpLAQx858=\");\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","he","jsxDEV","_jsxDEV","shuffleArray","array","i","length","j","Math","floor","random","Quiz","props","_s","results","questions","rightAnser","setAnswer","decodedResults","setDecodedResults","decodedData","map","question","decodedQuestion","decode","correct_answer","incorrect_answers","answer","className","children","q","options","console","log","fileName","_jsxFileName","lineNumber","columnNumber","option","id","value","type","name","htmlFor","onClick","checkAnswer","_c","$RefreshReg$"],"sources":["C:/Users/Oussama/OneDrive/Bureau/quiz-app/src/components/Quiz.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport he from \"he\" ;\r\n\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n}\r\n\r\nexport default function Quiz(props) {\r\n    const {results} = props.questions\r\n    const [rightAnser, setAnswer] = useState([{}]);\r\n    const [decodedResults, setDecodedResults] = useState([]);\r\n\r\n    useEffect(() => {\r\n      const decodedData = results.map((question) => {\r\n        const decodedQuestion = {\r\n          ...question,\r\n          question: he.decode(question.question),\r\n          correct_answer: he.decode(question.correct_answer),\r\n          incorrect_answers: question.incorrect_answers.map((answer) =>\r\n            he.decode(answer)\r\n          ),\r\n        };\r\n        setAnswer({})\r\n        return decodedQuestion;\r\n      });\r\n\r\n      setDecodedResults(decodedData);\r\n    }, [results]);\r\n\r\n    return (\r\n        <div className='quiz-item'>\r\n            {decodedResults.map(q => {\r\n                const { correct_answer, incorrect_answers, question } =\r\n                  q;\r\n                const options = shuffleArray([correct_answer,...incorrect_answers])\r\n                console.log([correct_answer, ...incorrect_answers]);\r\n                console.log(options)\r\n\r\n                return (\r\n                  <div key={question}>\r\n                    <h2>{question}</h2>\r\n                    <form className='quiz-form'>\r\n                        {options.map(option => {\r\n                            return(\r\n                                <div key={option}>\r\n                                    <input \r\n                                        id={option}\r\n                                        value={option}\r\n                                        type='radio'\r\n                                        name='answer'\r\n                                        className='quiz-form-item'\r\n                                    />\r\n                                    <label htmlFor={option}>{option}</label>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        <button onClick={checkAnswer}>Confirm</button>\r\n                    </form>\r\n                  </div>\r\n                );\r\n            })}        \r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}