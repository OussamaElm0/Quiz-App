{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oussama\\\\OneDrive\\\\Bureau\\\\quiz-app\\\\src\\\\components\\\\Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport he from \"he\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\nexport default function Quiz(props) {\n  _s();\n  const {\n    results\n  } = props.questions;\n  const [rightAnwsers, setAnswer] = useState([]);\n  const [currentAnswer, setCA] = useState({\n    question: \"\",\n    answer: \"\"\n  });\n  const [decodedResults, setDecodedResults] = useState([]);\n  const [shuffledOptions, setShuffledOptions] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [selectedOptions, setSelectedOptions] = useState({});\n  useEffect(() => {\n    const decodedData = results.map(question => {\n      const decodedQuestion = {\n        ...question,\n        question: he.decode(question.question),\n        correct_answer: he.decode(question.correct_answer),\n        incorrect_answers: question.incorrect_answers.map(answer => he.decode(answer))\n      };\n      setAnswer(prev => {\n        return [...prev, {\n          question: decodedQuestion.question,\n          answer: decodedQuestion.correct_answer\n        }];\n      });\n      return decodedQuestion;\n    });\n    setDecodedResults(decodedData);\n    const allOptions = decodedData.map(q => shuffleArray([q.correct_answer, ...q.incorrect_answers]));\n    setShuffledOptions(allOptions);\n  }, [results]);\n  const handleChoice = (qst, ans) => {\n    setCA({\n      question: qst,\n      answer: ans\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setIndex(prev => prev + 1);\n    decodedResults.forEach(q => {\n      const {\n        question,\n        correct_answer\n      } = q;\n      if (currentAnswer.question === question) {\n        if (currentAnswer.answer === correct_answer) {\n          setScore(prevScore => prevScore + 1);\n        }\n      }\n    });\n  };\n  const handleQuestions = () => {\n    try {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"question\",\n          children: decodedResults[index].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"answers\",\n          children: shuffledOptions[index].map((option, i) => {\n            const optionKey = i.toString();\n            const isChecked = selectedOptions[index] === option;\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"options\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  id: optionKey,\n                  name: \"answer\",\n                  value: option,\n                  checked: isChecked,\n                  onChange: () => {\n                    handleChoice(decodedResults[index].question, option);\n                    setSelectedOptions(prevState => ({\n                      ...prevState,\n                      [index]: option\n                    }));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: i,\n                  children: option\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          className: \"confirm-answer\",\n          children: \"Confirmer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this);\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"score\",\n      children: [\"Your score is : \", score, \" / \", decodedResults.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }, this), handleQuestions()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n_s(Quiz, \"fuxSDB4DCkr5lUajuLwsXlD8iYU=\");\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","he","jsxDEV","_jsxDEV","shuffleArray","array","i","length","j","Math","floor","random","Quiz","props","_s","results","questions","rightAnwsers","setAnswer","currentAnswer","setCA","question","answer","decodedResults","setDecodedResults","shuffledOptions","setShuffledOptions","index","setIndex","selectedOptions","setSelectedOptions","decodedData","map","decodedQuestion","decode","correct_answer","incorrect_answers","prev","allOptions","q","handleChoice","qst","ans","handleSubmit","e","preventDefault","forEach","setScore","prevScore","handleQuestions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","option","optionKey","toString","isChecked","Fragment","type","id","name","value","checked","onChange","prevState","htmlFor","onClick","error","console","score","_c","$RefreshReg$"],"sources":["C:/Users/Oussama/OneDrive/Bureau/quiz-app/src/components/Quiz.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport he from \"he\" ;\r\n\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n}\r\n\r\nexport default function Quiz(props) {\r\n    const {results} = props.questions\r\n    const [rightAnwsers, setAnswer] = useState([]);\r\n    const [currentAnswer, setCA] = useState({ question : \"\" , answer : \"\"})\r\n    const [decodedResults, setDecodedResults] = useState([]);\r\n    const [shuffledOptions, setShuffledOptions] = useState([])\r\n    const [index, setIndex] = useState(0)\r\n    const [selectedOptions, setSelectedOptions] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n      const decodedData = results.map((question) => {\r\n        const decodedQuestion = {\r\n          ...question,\r\n          question: he.decode(question.question),\r\n          correct_answer: he.decode(question.correct_answer),\r\n          incorrect_answers: question.incorrect_answers.map((answer) =>\r\n            he.decode(answer)\r\n          ),\r\n        };\r\n        setAnswer(prev => {\r\n          return [\r\n            ...prev,\r\n            {\r\n              question: decodedQuestion.question,\r\n              answer: decodedQuestion.correct_answer,\r\n            },\r\n          ];\r\n        });\r\n        return decodedQuestion;\r\n      });\r\n\r\n      setDecodedResults(decodedData);\r\n      const allOptions = decodedData.map((q) =>\r\n        shuffleArray([q.correct_answer, ...q.incorrect_answers])\r\n      );\r\n      setShuffledOptions(allOptions);\r\n    }, [results]);\r\n\r\n    const handleChoice = (qst, ans) => {\r\n      setCA({\r\n        question: qst,\r\n        answer: ans,\r\n      });\r\n    };\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      setIndex(prev => prev + 1)\r\n      decodedResults.forEach((q) => {\r\n        const { question, correct_answer } = q;\r\n        if (currentAnswer.question === question) {\r\n          if (currentAnswer.answer === correct_answer) {\r\n            setScore((prevScore) => prevScore + 1); \r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n\r\n    const handleQuestions = () => {\r\n      try {\r\n        return (\r\n          <div className='quiz-form'>\r\n            <p className='question'>{decodedResults[index].question}</p>\r\n            <form className='answers'>\r\n              {shuffledOptions[index].map((option,i) => {\r\n                const optionKey = i.toString(); \r\n                const isChecked = selectedOptions[index] === option;\r\n\r\n                return (\r\n                  <React.Fragment key={i}>\r\n                    <div className='options'>\r\n                      <input\r\n                      type=\"radio\"\r\n                      id={optionKey}\r\n                      name=\"answer\"\r\n                      value={option}\r\n                      checked={isChecked}\r\n                      onChange={() => {\r\n                        handleChoice(decodedResults[index].question, option);\r\n                        setSelectedOptions((prevState) => ({\r\n                          ...prevState,\r\n                          [index]: option,\r\n                        }));\r\n                      }}\r\n                    />\r\n                    <label htmlFor={i}>{option}</label>\r\n                    </div>\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </form>\r\n            <button onClick={handleSubmit} className='confirm-answer'>Confirmer</button>\r\n          </div>\r\n        )\r\n      } catch (error) {\r\n        console.error(error)\r\n        return null\r\n      }\r\n    }\r\n    return (\r\n        <div className='quiz-section'>\r\n          <p className='score'>Your score is : {score} / {decodedResults.length}</p>\r\n          {handleQuestions()}\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}