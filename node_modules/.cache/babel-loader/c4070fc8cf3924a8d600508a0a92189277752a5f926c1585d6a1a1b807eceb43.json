{"ast":null,"code":"import _defineProperty from\"C:/Users/Oussama/OneDrive/Bureau/quiz-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _toConsumableArray from\"C:/Users/Oussama/OneDrive/Bureau/quiz-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Users/Oussama/OneDrive/Bureau/quiz-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/Oussama/OneDrive/Bureau/quiz-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import he from\"he\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function shuffleArray(array){for(var i=array.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var _ref=[array[j],array[i]];array[i]=_ref[0];array[j]=_ref[1];}return array;}export default function Quiz(props){var results=props.questions.results;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),rightAnwsers=_useState2[0],setAnswer=_useState2[1];var _useState3=useState({question:\"\",answer:\"\"}),_useState4=_slicedToArray(_useState3,2),currentAnswer=_useState4[0],setCA=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),decodedResults=_useState6[0],setDecodedResults=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),shuffledOptions=_useState8[0],setShuffledOptions=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),score=_useState10[0],setScore=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),index=_useState12[0],setIndex=_useState12[1];var _useState13=useState({}),_useState14=_slicedToArray(_useState13,2),selectedOptions=_useState14[0],setSelectedOptions=_useState14[1];useEffect(function(){var decodedData=results.map(function(question){var decodedQuestion=_objectSpread(_objectSpread({},question),{},{question:he.decode(question.question),correct_answer:he.decode(question.correct_answer),incorrect_answers:question.incorrect_answers.map(function(answer){return he.decode(answer);})});setAnswer(function(prev){return[].concat(_toConsumableArray(prev),[{question:decodedQuestion.question,answer:decodedQuestion.correct_answer}]);});setScore(0);return decodedQuestion;});setDecodedResults(decodedData);var allOptions=decodedData.map(function(q){return shuffleArray([q.correct_answer].concat(_toConsumableArray(q.incorrect_answers)));});setShuffledOptions(allOptions);},[results]);var handleChoice=function handleChoice(qst,ans){setCA({question:qst,answer:ans});};var handleSubmit=function handleSubmit(e){e.preventDefault();setIndex(function(prev){return prev+1;});decodedResults.forEach(function(q){var question=q.question,correct_answer=q.correct_answer;if(currentAnswer.question===question){if(currentAnswer.answer===correct_answer){setScore(function(prevScore){return prevScore+1;});}}});};var handleQuestions=function handleQuestions(){try{return/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-form\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"question\",children:decodedResults[index].question}),/*#__PURE__*/_jsx(\"form\",{className:\"answers\",children:shuffledOptions[index].map(function(option,i){var optionKey=i.toString();var isChecked=selectedOptions[index]===option;return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"options\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:optionKey,name:\"answer\",value:option,checked:isChecked,onChange:function onChange(){handleChoice(decodedResults[index].question,option);setSelectedOptions(function(prevState){return _objectSpread(_objectSpread({},prevState),{},_defineProperty({},index,option));});}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:i,children:option})]})},i);})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,className:\"confirm-answer\",children:\"Confirmer\"})]});}catch(error){console.error(error);return null;}};return/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-section\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"indice\",children:\"You can't generate the same think 2 times. You must change one of options*\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"score\",children:[\"Your score is : \",score,\" / \",decodedResults.length]}),handleQuestions()]});}","map":{"version":3,"names":["React","useState","useEffect","he","jsx","_jsx","jsxs","_jsxs","shuffleArray","array","i","length","j","Math","floor","random","_ref","Quiz","props","results","questions","_useState","_useState2","_slicedToArray","rightAnwsers","setAnswer","_useState3","question","answer","_useState4","currentAnswer","setCA","_useState5","_useState6","decodedResults","setDecodedResults","_useState7","_useState8","shuffledOptions","setShuffledOptions","_useState9","_useState10","score","setScore","_useState11","_useState12","index","setIndex","_useState13","_useState14","selectedOptions","setSelectedOptions","decodedData","map","decodedQuestion","_objectSpread","decode","correct_answer","incorrect_answers","prev","concat","_toConsumableArray","allOptions","q","handleChoice","qst","ans","handleSubmit","e","preventDefault","forEach","prevScore","handleQuestions","className","children","option","optionKey","toString","isChecked","Fragment","type","id","name","value","checked","onChange","prevState","_defineProperty","htmlFor","onClick","error","console"],"sources":["C:/Users/Oussama/OneDrive/Bureau/quiz-app/src/components/Quiz.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport he from \"he\" ;\r\n\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n}\r\n\r\nexport default function Quiz(props) {\r\n    const {results} = props.questions\r\n    const [rightAnwsers, setAnswer] = useState([]);\r\n    const [currentAnswer, setCA] = useState({ question : \"\" , answer : \"\"})\r\n    const [decodedResults, setDecodedResults] = useState([]);\r\n    const [shuffledOptions, setShuffledOptions] = useState([])\r\n    const [score, setScore] = useState(0)\r\n    const [index, setIndex] = useState(0)\r\n    const [selectedOptions, setSelectedOptions] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n      const decodedData = results.map((question) => {\r\n        const decodedQuestion = {\r\n          ...question,\r\n          question: he.decode(question.question),\r\n          correct_answer: he.decode(question.correct_answer),\r\n          incorrect_answers: question.incorrect_answers.map((answer) =>\r\n            he.decode(answer)\r\n          ),\r\n        };\r\n        setAnswer(prev => {\r\n          return [\r\n            ...prev,\r\n            {\r\n              question: decodedQuestion.question,\r\n              answer: decodedQuestion.correct_answer,\r\n            },\r\n          ];\r\n        });\r\n        setScore(0)\r\n        return decodedQuestion;\r\n      });\r\n\r\n      setDecodedResults(decodedData);\r\n      const allOptions = decodedData.map((q) =>\r\n        shuffleArray([q.correct_answer, ...q.incorrect_answers])\r\n      );\r\n      setShuffledOptions(allOptions);\r\n    }, [results]);\r\n\r\n    const handleChoice = (qst, ans) => {\r\n      setCA({\r\n        question: qst,\r\n        answer: ans,\r\n      });\r\n    };\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      setIndex(prev => prev + 1)\r\n      decodedResults.forEach((q) => {\r\n        const { question, correct_answer } = q;\r\n        if (currentAnswer.question === question) {\r\n          if (currentAnswer.answer === correct_answer) {\r\n            setScore((prevScore) => prevScore + 1); \r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n\r\n    const handleQuestions = () => {\r\n      try {\r\n        return (\r\n          <div className='quiz-form'>\r\n            <p className='question'>{decodedResults[index].question}</p>\r\n            <form className='answers'>\r\n              {shuffledOptions[index].map((option,i) => {\r\n                const optionKey = i.toString(); \r\n                const isChecked = selectedOptions[index] === option;\r\n\r\n                return (\r\n                  <React.Fragment key={i}>\r\n                    <div className='options'>\r\n                      <input\r\n                      type=\"radio\"\r\n                      id={optionKey}\r\n                      name=\"answer\"\r\n                      value={option}\r\n                      checked={isChecked}\r\n                      onChange={() => {\r\n                        handleChoice(decodedResults[index].question, option);\r\n                        setSelectedOptions((prevState) => ({\r\n                          ...prevState,\r\n                          [index]: option,\r\n                        }));\r\n                      }}\r\n                    />\r\n                    <label htmlFor={i}>{option}</label>\r\n                    </div>\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </form>\r\n            <button onClick={handleSubmit} className='confirm-answer'>Confirmer</button>\r\n          </div>\r\n        )\r\n      } catch (error) {\r\n        console.error(error)\r\n        return null\r\n      }\r\n    }\r\n    return (\r\n        <div className='quiz-section'>\r\n          <p className='indice'>You can't generate the same think 2 times. You must change one of options*</p>\r\n          <p className='score'>Your score is : {score} / {decodedResults.length}</p>\r\n          {handleQuestions()}\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}